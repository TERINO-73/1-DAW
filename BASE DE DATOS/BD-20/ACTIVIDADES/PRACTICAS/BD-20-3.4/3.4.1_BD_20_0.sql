0.1)DECLARE
    V_NUM_EMPLEADOS NUMBER(2);
  BEGIN
    INSERT INTO DEPART VALUES (99,'PROVISIONAL',NULL);
    UPDATE EMPLE SET DEPT_NO = 99
        WHERE DEPT_NO = 20;
    V_NUM_EMPLEADOS := SQL%ROWCOUNT;
    DELETE FROM DEPART WHERE DEPT_NO = 20;
    DBMS_OUTPUT.PUT_LINE(V_NUM_EMPLEADOS || 'EMPLEADOS UBICADOS EN PROVISISONAL');
  EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20000,'ERROR EN LA APLICACION')
  END;
  /
  
0.2)DECLARE
    V_APE VARCHAR2(10);
    V_OFICIO VARCHAR2(10);
  BEGIN
    SELECT APELLIDO,OFICIO INTO V_APE,V_OFICIO
        FRO EMPLE WHERE EMP_NO = 7900;
    DBMS_OUTPUT.PUT_LINE(V_APE||'*'||V_OFICIO);
  END;
  /

0.3)DECLARE
    V_APE VARCHAR2(10);
    V_OFICIO VARCHAR2(10);
  BEGIN
    SELECT APELLIDO,OFICIO INTO V_APE,V_OFICIO
        FROM EMPLE WHERE EMP_MO = 7900;
        DBMS_OUTPUT.PUT_LINE(V_APE||'*'||V_OFICIO);
  EXCEPTION
    WHEN NO_DATE_FOUND THEN
        RAISE_APPLICATION_ERROR(-20000,'ERROR NO HAY DATOS');
    WHEN TOO_MANY_ROWS THEN
        RAISE_APPLICATION_ERROR(-20000,'ERROR DEMASIADOS DATOS');
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20000,'ERROR EN LA APLICACION');
  END;

0.4)CREATE OR REPLACE TRIGGER AUDIT_BORRADO_EMPLE
        BEFORE DELETE
        ON EMPLE
    FOR EACH ROW
  BEGIN
        DBMS_OUTPUT.PUT_LINE('BORRADO EMPLEADO'
                    ||'*'||:OLD.EMP_NO||'*'||:OLD.APELLIDO);

0.5)DECLARE
    V_NOM CLIENTES.NOMBRE%TYPE;--(EJEMPLO USO %TYPE)
  BEGIN
    SELECT NOMBRE INTO V_NOM
        FROM CLIENTES
        WHERE CLIENTES_NO=&VN_CLI;
    DBMS_OUTPUT.PUT_LINE(V_NOM);
  END;

0.6)CREATE OR REPLACE 
  PROCEDURE VER_DEPART (NUMDEPART NUMBER)
  AS
    V_DNOMBRE VARCHAR2(14);
    V_LOCALIDAD VARCHAR2(14);
  BEGIN
    SELECT DNOMBRE, LOC INTO V_DNOMBRE,V_LOCALIDAD
        FROM DEPART
        WHERE DEPT_NO = NUMDEPART;
    DBMS_OUTPUT.PUT_LINE('NUM DEPART:'||NUMDEPART||'* NOMBRE DEP:'||V_DNOMBRE||'* LOCALIDAD:'||V_LOCALIDAD);

  EXCEPTION
    WHEN NO_DATE_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('NO ENCONTRADO DEPARTAMENTO');
  END VER_DEPART;
  /

0.7)CREATE OR REPLACE
    PROCEDURE VER_PRECIO(V_NUM_PRODUCTO NUMBER)
  AS
    VER_PRECIO NUMBER;
  BEGIN
    SELECT PRECIO_ACTUAL INTO VER_PRECIO
        FROM PRODUCTOS
        WHERE PRODUCTOS_NO = V_NUM_PRODUCTO;
    DBMS_OUTPUT.PUT_LINE('PRECIO = '||VER_PRECIO);
  END;
  /

  EXECUTE VER_PRECIO(50);
  
0.8)CREATE OR REPLACE
  PROCEDURE MODIFICAR_PRECIO_PRODUCTO
    (NUMPRODUCTO NUMBER, NUEVOPRECIO NUMBER)
  AS
    V_PRECIOAMT NUMBER(5);
  BEGIN
    SELECT PRECIO_ACTUAL INTO V_PRECIOAMT
        FROM PRODUCTOS
            WHERE PRODUCTOS_NO = NUMPRODUCTO;
    IF (V_PRECIOAMT * 0.20) > (NUEVOPRECIO - V_PRECIOAMT) THEN 
            UPDATE PRODUCTOS SET PRECIO_ACTUAL = NUEVOPRECIO
                WHERE PRODUCTOS_NO =NUMPRODUCTO;
    ELSE 
                DBMS_OUTPUT.PUT_LINE('ERROR,MODIFICACION SUPERA 20%');
    END IF;

  EXCEPTION
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('NO ENCONTRADO PRODUCTO'||NUMPRODUCTO);
  END MODIFICAR_PRECIO_PRODUCTO;
  /
    
0.9)CREATE OR REPLACE FUNCION CON_IVA (
    CANTIDAD NUMBER,
    TIPO NUMBER DEFAULT 16
)
    RETURN NUMBER
  AS
    V_RESULTADO NUMBER (10,2) DEFAULT 0;
  BEGIN
    V_RESULTADO := CANTIDAD * (1 + (TIPO / 100));
    RETURN(V_RESULTADO);
  END CON_IVA;
  /
0.248)BEGIN 
        DBMS_OUTPUT.PUT_LINE(TO_CHAR(SYSDATE,'DAY " dia " DD " de " MONTH " DE " YYYY " a las " :HH24:MI:SS'));
      END;
      /
0.250)DECLARE
        V_EMPLEADO_NO NUMBER(4,0);
        V_C_EMPLEADOS NUMBER(2);
        V_AUMENTO NUMBER(7) DEFAULT 0;
        V_OFICIO VARCHAR2(10);
      BEGIN
        V_EMPLEADO_NO := &VT_EMPNO;

        SELECT OFICIO INTO V_OFICIO FROM EMPLEADO
          WHERE EMP_NO = V_EMPLEADO_NO;

        IF V_OFICIO = 'PRESIDENTE' THEN
          V_AUMENTO := 30;
        END IF;

        SELECT COUNT(*) INTO V_C_EMPLEADOS FROM EMPLEADO 
          WHERE DIR = V_EMPLEADO_NO;
        IF V_C_EMPLEADOS = 0 THEN
          V_AUMENTO :=  V_AUMENTO + 50;
        ELSIF V_C_EMPLEADOS = 1 THEN
          V_AUMENTO := V_AUMENTO + 80;
        ELSIF V_C_EMPLEADOS = 1 THEN
          V_AUMENTO := V_AUMENTO + 100;
        ELSE 
          V_AUMENTO := V_AUMENTO + 110;
        END IF;

        UPDATE EMPLE SET SALARIO = SALARIO + V_AUMENTO WHERE EMP_NO = V_EMPLEADO_NO;
        DBMS_OUTPUT.PUT_LINE(V_AUMENTO);

      END;
      /


0.252.1)DECLARE
          V_EMPLEADO_NO NUMBER(4,0);
          V_C_EMPLEADOS NUMBER(2);
          V_AUMENTO NUMBER(7) DEFAULT 0;
          V_OFICIO VARCHAR2(10);
        BEGIN
          V_EMPLEADO_NO := &VT_EMPNO;

          SELECT OFICIO INTO V_OFICIO FROM EMPLEADO
            WHERE EMP_NO = V_EMPLEADO_NO;

          IF V_OFICIO = 'PRESIDENTE' THEN
            V_AUMENTO := 30;
          END IF;

          SELECT COUNT(*) INTO V_C_EMPLEADOS FROM EMPLEADO 
            WHERE DIR = V_EMPLEADO_NO;
          CASE 
          WHEN V_C_EMPLEADOS = 0 THEN
            V_AUMENTO :=  V_AUMENTO + 50;
          WHEN V_C_EMPLEADOS = 1 THEN
            V_AUMENTO :=  V_AUMENTO + 80;
          WHEN V_C_EMPLEADOS = 2 THEN
            V_AUMENTO :=  V_AUMENTO + 100;
          ELSE
            V_AUMENTO :=  V_AUMENTO + 110;
          END CASE;
          UPDATE EMPLE SET SALARIO = SALARIO + V_AUMENTO WHERE EMP_NO = V_EMPLEADO_NO;
          DBMS_OUTPUT.PUT_LINE(V_AUMENTO);

        END;
        /
0.252.2)DECLARE
          V_EMPLEADO_NO NUMBER(4,0);
          V_C_EMPLEADOS NUMBER(2);
          V_AUMENTO NUMBER(7) DEFAULT 0;
          V_OFICIO VARCHAR2(10);
        BEGIN
          V_EMPLEADO_NO := &VT_EMPNO;

          SELECT OFICIO INTO V_OFICIO FROM EMPLEADO
            WHERE EMP_NO = V_EMPLEADO_NO;

          IF V_OFICIO = 'PRESIDENTE' THEN
            V_AUMENTO := 30;
          END IF;

          SELECT COUNT(*) INTO V_C_EMPLEADOS FROM EMPLEADO 
            WHERE DIR = V_EMPLEADO_NO;
          CASE V_C_EMPLEADOS
          WHEN 0 THEN
            V_AUMENTO :=  V_AUMENTO + 50;
          WHEN 1 THEN
            V_AUMENTO :=  V_AUMENTO + 80;
          WHEN 2 THEN
            V_AUMENTO :=  V_AUMENTO + 100;
          ELSE
            V_AUMENTO :=  V_AUMENTO + 110;
          END CASE;

          UPDATE EMPLE SET SALARIO = SALARIO + V_AUMENTO WHERE EMP_NO = V_EMPLEADO_NO;
          DBMS_OUTPUT.PUT_LINE(V_AUMENTO);

        END;
        /

0.254)DECLARE
        CURSOR CURL IS
        SELECT DNOMBRE,LOC FROM DEPART;
        V_NOMBRE VARCHAR2(14);
        V_LOCALIDAD VARCHAR2(14); 

      BEGIN
        FOR i IN REVERSE 1..3 LOOP
          DBMS_OUTPUT.PUT_LINE(i)
          END LOOP;
      END;

0.255)
      <<PPAL>>
      DECLARE
        i INTEGER;
      BEGIN
        FOR i IN 1..10 LOOP
          DBMS_OUTPUT.PUT_LINE(i)
          END LOOP;
0.259.1)CREATE OR REPLACE PROCEDURE CAMBIAR_OFICIO (
            NUM_EMPLEADO NUMBER,
            NUEVO_OFICIO VARCHAR2
)
        AS
          V_ANTERIOR_OFICIO EMPLE.OFICIO%TYPE;
        BEGIN
          SELECT OFICIO INTO V_ANTERIOR_OFICIO FROM EMPLE
            WHERE EMP_NO = NUM_EMPLEADO;
          UPDATE EMPLE SET OFICIO = NUEVO_OFICIO
            WHERE EMP_NO = NUM_EMPLEADO;
          DBMS_OUTPUT.PUT_LINE(NUM_EMPLEADO||'*OFICIO ANTERIOR:'||V_ANTERIOR_OFICIO||'*OFICIO NUEVO :'||NUEVO_OFICIO);
        END CAMBIAR_OFICIO;
        /  

0.259.2)EXECUTE CAMBIAR_OFICIO(7902,'DIRECTOR');

0.260.1)CREATE OR REPLACE PROCEDURE CAM_OFUI_ (
            V_APELLIDO VARCHAR,
            NUE_OFICIO VARCHAR2
)
        IS 
          V_N_EMPLEADO EMPELE.EMP_NO%TYPE;
        BEGIN
          SELECT EMP_NO INTO V_N_EMPLEADO FROM EMPLE
            WHERE APELLIDO = V_APELLIDO;
          CAMBIAR_OFICIO(V_N_EMPLEADO,NUE_OFICIO);
        END CAM_OFI_;

0.260.2)EXECUTE CAM_OFI_('FERNANDEZ','ANALISTA');

0.263)PROCEDURE CREAR_DEPART (
        V_NUM_DEPT DEPART.DEPT_NO%TYPE,
        V_DNOMBRE DEPART.DNOMBRE%TYPE DEFAULT 'PROVISIONAL',
        V_LOC DEPART.LOC%TYPE DEFAULT 'PROVISIONAL'
)
      IS
      BEGIN
        INSERT INTO DEPART
          VALUES (V_NUM_DEPT,V_DNOMBRE,V_LOC);
      END CREAR_DEPART;
SON VALIDAS:
      CREAR_DEPART(50);
      CREAR_DEPART(50,'COMPRAS');
      CREAR_DEPART(50,'COMPRAS','VALENCIA');

0.264.1)CREATE OR REPLACE PROCEDURE CAMBIAR_DIVISAS (
          CANTIDAD_EUROS IN NUMBER,
          CAMBIO_ACTUAL IN NUMBER,
          CANTIDAD_COMISION IN OUT NUMBER,
          CANTIDAD_DIVISAS OUT NUMBER
)
        AS 
          PCT_COMISION CONSTANT NUMBER (3,2) :=0.2;
          MINIMO_COMISION CONSTANT NUMBER(6) DEFAULT 3;
        BEGIN
          IF CANTIDAD_COMISION IS NULL THEN 
            CANTIDAD_COMISION := GREATEST(CANTIDAD_EUROS/100*PCT_COMISION,MINIMO_COMISION);
          END IF;
          CANTIDAD_DIVISAS := (CANTIDAD_EUROS - CANTIDAD_COMISION) * CAMBIO_ACTUAL;
        END;
        /

0.264.2)CREATE OR REPLACE PROCEDURE MOSTRAR_CAMBIO_DIVISAS (
          EUR NUMBER,
          CAMBIO NUMBER)
        AS
          V_COMISION NUMBER(9);
          V_DIVISAS NUMBER(9);
        BEGIN
          CAMBIAR_DIVISAS(EUR,CAMBIO,V_COMISION,V_DIVISAS)
          DBMS_OUTPUT.PUT_LINE('EUROS             :'|| TO_CHAR(EUR,'999,999,999.999'));
          DBMS_OUTPUT.PUT_LINE('DIVISAS X 1 EURO:'|| TO_CHAR(CAMBIO,'999,999,999.999'));
          DBMS_OUTPUT.PUT_LINE('EUROS COMISION :'|| TO_CHAR(V_COMISION,'999,999,999.999'));
          DBMS_OUTPUT.PUT_LINE('CANTIDAD DIVISAS :'|| TO_CHAR(V_DIVISAS,'999,999,999.999'));
        END;
        /
0.264.3)EXECUTE MOSTRAR_CAMBIO_DIVISAS(2500, 1.220);

0.274)DECLARE 
        CURSOR CURL IS 
          SELECT DNOMBRE,LOC FROM DEPART;
        V_NOMBRE VARCHAR2(14);
        V_LOCALIDAD VARCHAR2(14);
      BEGIN
        OPEN CURL;
        LOOP
          FETCH CURL INTO V_NOMBRE ,V_LOCALIDAD;
            EXIT WHEN CURL%NOTFOUND;
              DBMS_OUTPUT.PUT_LINE (V_NOMBRE || '*' || V_LOCALIDAD);
        END LOOP;
        CLOSE CURL;
      END;

0.275)DECLARE 
        CURSOR CURL IS 
          SELECT DNOMBRE,LOC FROM DEPART;
        V_NOMBRE VARCHAR2(14);
        V_LOCALIDAD VARCHAR2(14);
      BEGIN
        OPEN CURL;
        FETCH CURL INTO V_NOMBRE, V_LOCALIDAD;
        WHILE CURL%FOUND LOOP
            DBMS_OUTPUT.PUT_LINE (V_NOMBRE || '*' || V_LOCALIDAD);
            FETCH CURL INTO V_NOMBRE, V_LOCALIDAD;
        END LOOP;
        CLOSE CURL;
      END;

0.277)CREATE OR REPLACE PROCEDURE VER_EMPLE_POR_DEPT (
      DEP VARCHAR2)
      AS
        V_DEPT NUMBER(2);
        CURSOR C1 IS 
          SELECT APELLIDO FROM EMPLE WHERE DEPT_NO = V_DEPT;
        V_APELLIDO VARCHAR2(10);
      BEGIN
        V_DEPT : DEP;
        OPEN C1;
        FETCH C1 INTO V_APELLIDO;
        WHILE CURL%FOUND LOOP
          DBMS_OUTPUT.PUT_LINE(V_APELLIDO);
          FETCH C1 INTO V_APELLIDO;
        END LOOP;
        CLOSE C1;
      END;

0.279)DECLARE
        CURSOR MI_CURSOR IS
          SELECT APELLIDO,OFICIO, COMISION FROM EMPLE 
            WHERE COMISION > 500;
      BEGIN
        FOR V_REG IN MI_CURSOR LOOP
          DBMS_OUTPUT.PUT_LINE(V_REG.APELLIDO||'*'||V_REG.OFICIO||TO_CHAR(V_REG.COMISION));
        END LOOP;
      END;

0.280.1)DECLARE
        CURSOR C_EMPLE IS 
            SELECT APELLIDO, FECHA_ALT FROM EMPLE
            ORDER BY FECHA_ALT;
      BEGIN
        FOR V_REG_EMP IN C_EMPLE LOOP
            DBMS_OUTPUT.PUT_LINE(V_REG_EMP.APELLIDO||'*'||V_REG_EMP.FECHA_ALT);
        END LOOP;
      END;

0.280.2)DECLARE
        CURSOR C_EMPLE IS 
            SELECT APELLIDO, FECHA_ALT FROM EMPLE
            ORDER BY FECHA_ALT;
        V_REG_EMP C_EMPLE%ROWTYPE;
      BEGIN
        OPEN C_EMPLE;
        FETCH C_EMPLE INTO V_REG_EMP;
        WHILE C_EMPLE%FOUND LOOP
            DBMS_OUTPUT.PUT_LINE(V_REG_EMP.APELLIDO||'*'||V_REG_EMP.FECHA_ALT);
            FETCH C_EMPLE INTO V_REG_EMP;
        END LOOP;
        CLOSE C_EMPLE;
      END;

0.281)DECLARE
        CURSOR cur1
          (V_DEPARTAMENTO NUMBER,V_OFICIO VARCHAR2 DEFAULT 'DIRECTOR' )
        IS SELECT APELLIDO , SALARIO FROM EMPLE 
          WHERE DEPT_NO = V_DEPARTAMENTO AND OFICIO = V_OFICIO;
0.321)DECLARE
        TYPE T_DOMICILIO IS RECORD
          (CALLE VARCHAR(30),NUMERO SMALLINT,LOCALIDAD VARCHAR2(25));
        TYPE T_DATOSPERSONA IS RECORD
          (NOMBRE VARCHAR2(35),DOMICILIO T_DOMICILIO, FECHA_NACIMIENTO DATE);
        V_PERSONA T_DATOSPERSONA;
      BEGIN
        V_PERSONA.NOMBRE := 'ALONSO FERNANDEZ , JOAQUIN';
        V_PERSONA.DOMICILIO.CALLE := 'C/ ALBUFERA';
        V_PERSONA.DOMICILIO.NUMERO := 14;
      END;

0.325)DECLARE 
        TYPE T_MESES IS TABLE OF VARCHAR2(10);
        VA_MESES T_MESES;
      BEGIN
        VA_MESES := T_MESES('ENERO','FEBRERO','MARZO','ABRIL','MAYO','JUNIO','JULIO','AGOSTO','SEPTIEMBRE','OCTUBRE');
        VA_MESES.EXTEND;
        VA_MESES(11) := 'NOVIEMBRE';
        VA_MESES.EXTEND;
        VA_MESES(12) := 'DICIEMBRE';
        FOR i IN 1..12 LOOP 
        DBMS_OUTPUT.PUT_LINE( TO_CHAR(i) || '-' || VA_MESES(i));
        END LOOP;
      END;
      /
