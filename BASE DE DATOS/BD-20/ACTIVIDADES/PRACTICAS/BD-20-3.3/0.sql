0.1)CREATE TABLA ALUMNO07
(
    NUMERO_MATRICULA    NUMBER(6)   NOT NULL,
    NOMBRE  VARCHAR2(15)    NOT NULL,
    FECHA_NACIMIENTO    DATE,
    DIRECCION   VARCHAR2(30),
    LOCALIDAD   VARCHAR2(15)
);

Table ALUMNOS07 creado.

0.2)CREATE TABLE PROVIN
(
    CODIGO  NUMBER(2)    PRIMARY KEY,
    NOMBRE  VARCHAR2(25)
);

Table PROVIN creado.

CREATE TABLE EMPLEADO
(
        NOMBRE          VARCHAR2(25),
        EDAD            NUMBER(2),
        COD_PROVINCIA   NUMBER(2),
        PRIMARY KEY (NOMBRE),
        CHECK (EDAD BETWEEN 18 AND 35),
        FOREIGN KEY (COD_PROVINCIA) REFERENCES PROVIN 
                                ON DELETE CASCADE
);
0.3)CREATE TABLE BLOQUEPISOS
(
    CALLE   VARCHAR2(30)    NOT NULL,
    NUMERO  NUMBER(3)   NOT NULL,
    PISO    NUMBER(2)   NOT NULL,
    PUERTA  CHAR(1) NOT NULL,
    CODIGO_POSTAL   NUMBER(5),
    METROS  NUMBER(5),
    COMENTARIOS VARCHAR2(60),
    COD_ZONA    NUMBER(2),
    DNI VARCHAR2(10),
    CONSTRAINT PK_VIV PRIMARY KEY (CALLE,NUMERO,PISO,PUERTA)
);

Table BLOQUEPISOS creado.

CREATE TABLE ZONAS
(
    COD_ZONA    NUMBER(2)   PRIMARY KEY,
    NOMBREZONA  VARCHAR2(15)    NOT NULL,
    MASDATOS    VARCHAR2(60)
);

Table ZONAS creado.

0.4)CREATE TABLE PROVINCIAS 
(
    COD_PROVINCIA   NUMBER(2)   PRIMARY KEY,
    NOM_PROVINCIA   VARCHAR2(15)
);
CREATE TABLE PERSONAS
(
    DNI NUMBER(8)   PRIMARY KEY,
    NOMBRE  VARCHAR2(15),
    DIRECCION   VARCHAR2(15),
    POBLACION   VARCHAR2(20),
    CODPROVIN   NUMBER(2)   NOT NULL REFERENCES PROVINCIAS
);

Table PROVINCIAS creado.


Table PERSONAS creado.


0.5)CREATE TABLE PERSONAS
(
    DNI NUMBER(8)   PRIMARY KEY,
    NOMBRE  VARCHAR2(15),
    DIRECCION   VARCHAR2(15),
    POBLACION   VARCHAR2(20),
    CODPROVIN   NUMBER(2)   REFERENCES PROVINCIAS ON DELETE CASCADE
);

Table PERSONAS creado.

0.6)CREATE TABLE PROVINCIAS 
(
    COD_PROVINCIA   NUMBER(2)   PRIMARY KEY,
    NOM_PROVINCIA   VARCHAR2(15)
);

0.7)CREATE TABLE PERSONAS
(
    DNI NUMBER(8)   CONSTRAINT PK_PER PRIMARY KEY,
    NOMBRE  VARCHAR2(15),
    DIRECCION   VARCHAR2(15),
    POBLACION   VARCHAR2(20),
    CODPROVIN   NUMBER(2)   NOT NULL,
    CONSTRAINT PK_PER FOREIGN KEY (CODPROVIN) REFERENCES PROVINCIAS ON DELETE CASCADE
);
0.8)CREATE TABLE EJEMPLO
(
    NIF VARCHAR2(10) NOT NULL,
    NOMBRE VARCHAR2(30) CONSTRAINT NOMMNONULO NOT NULL,
    EDAD NUMBER(2)
);

Table EJEMPLO creado.
0.9)CREA TABLE EJEMPLO1
(
    DNI VARCHAR2(10) NOT NULL,
    NOMBRE VARCHAR2(30),
    FECHA DATE DEFAULT SYSDATE
);

Table EJEMPLO1 creado.
0.10)CREATE TABLE EJEMPLO3
(
    DNI VARCHAR2(10) NOT NULL,
    NOMBRE VARCHAR2(30) NOT NULL,
    EDAD NUMBER(2),
    CURSO NUMBER,
    CONSTRAINT CLAVE_P PRIMARY KEY(DNI),
    CONSTRAINT COMP_EDAD CHECK (EDAD BETWEEN 5 AND 20),
    CONSTRAINT NOMBRE_MAYUS CHECK (NOMBRE= UPPER(NOMBRE)),
    CONSTRAINT COMP_CURSO CHECK (CURSO IN (1,2,3))
);

Table EJEMPLO3 creado.
0.11)CREATE TABLE EJEMPLO1_U
(
    DNI VARCHAR2(10) PRIMARY KEY,
    NOM VARCHAR2(30) UNIQUE,
    EDAD NUMBER(2)
);

Table EJEMPLO1_U creado.
0.12)CREATE TABLE EJEMPLO_AS
    AS SELECT * FROM EJEMPLO;

Table EJEMPLO_AS creado.

0.13)CREATE TABLE EJEMPLO_AS2 (COL1,COL2,COL3,COL4)
    AS SELECT * FROM EJEMPLO;

Table EJEMPLO_AS2 creado.

0.14)CREATE TABLE EMPLEYDEPART
    AS SELECT APELLIDO ,DNOMBRE
    FROM EMPLE ,DEPART WHERE EMPLE.DEPT_NO = DEPART.DEPT_NO;

Table EMPLEYDEPART creado.

0.15)DROP TABLE PROVINCIAS CASCADE CONSTRAINTS;

Table PROVINCIAS borrado.

0.16)ALTER TABLE EJEMPLO3 ADD (SEXO CHAR(1),IMPORTE NUMBER(4));
0.17)UPDATE EJEMPLO3 SET SEXO = 'X';
0.18)ALTER TABLE EJEMPLO3 DROP COLUMN SEXO; 
    ALTER TABLE EJEMPLO3 DROP COLUMN IMPORTE;
0.19)ALTER TABLE EMPLE ADD CONSTRAINT SALMAYOR CHECK (SALARIO > 0);
0.20)ALTER TABLE EMPLE ADD CONSTRAINT FK_EMPLE FOREING KEY (DEPT_NO) REFERENCES DEPART ON DELETE CASCADE;
0.21)CREATE TABLE TIENDAS
(
    NIF VARCHAR2(10) PRIMARY KEY,
    NOMBRE VARCHAR2(30) NOT NULL,
    DIRECCION VARCHAR2(20),
    POBLACION VARCHAR2(20),
    PROVINCIA VARCHAR2(20),
    CONSTRAINT PROV_MAYUS CHECK (PROVINCIA = UPPER(PROVINCIA))
)
0.22)CREATE VIEW DEP30
    AS SELECT APELLIDO,OFICIO,SALARIO FROM EMPLE
    WHERE DEPT_NO=30;

0.23)CREATE VIEW DEP30 (APE,OFI,SAL)
    AS SELECT APELLIDO,OFICIO,SALARIO FROM EMPLE
    WHERE DEPT_NO=30;

0.24)CREATE OR REPLACE VIEW DEP20
    AS SELECT * FROM EMPLE WHERE DEPT_NO = 20;

0.25)CREATE OR REPLACE VIEW DEP20
    AS SELECT * FROM EMPLE WHERE DEPT_NO = 20 WITH CHECK OPTION;

0.26)CREATE OR REPLACE VIEW DEP30
    AS SELECT * FROM EMPLE WHERE DEPT_NO=30 WITH READ ONLY;  

0.27)CREATE VIEW EMP_DEPT (EMP_NO,APELLIDO,DEPT_NO,DNOMBRE) AS
    SELECT EMP_NO,APELLIDO,EMPLE.DEPT_NO=DEPART.DEPT_NO;

0.28)CREATE SYNONYM DEPART FOR PEDRO.DEPART;



crear una tabla (EMP) con la misma estructura que otra tabla determinada(EMPLE)

CREATE TABLE EMP
(
    EMP_NO NUMBER(4) NOT NULL,
    APELLIDO VARCHAR2(10),
    OFICIO VARCHAR2(10),
    DIR NUMBER(4),
    FECHA_ALT DATE,
    SALARIO NUMBER(7),
    COMISION NUMBER(7),
    DEPT_NO NUMBER(2) NOT NULL,

);

crear una tabla (DEP) con la misma estructura que otra tabla determinada(DEPART)

CREATE TABLE EMP
(
    DEPT_NO NUMBER(4) NOT NULL,
    DNOMBRE VARCHAR2(14),
    LOC VARCHAR2(14),


);

CREAR UNA VISTA CON TODOS LOS  DE TODOS LOS EMPLEADOS DEL DEPARTAMENTO 20

CREATE OR REPLACE VIEW DEP20
    AS SELECT * FROM EMPLE WHERE DEPT_NO = 20 WITH CHECK OPTION;

INSERTAR LA VISTA UN EMPLEADO CON CODIGO 1 Y EL DEPARTAMENTO 20

INSERT INTO DEP1 VALUES  (1,'TERINO','EMPLEADO',1,SYSDATE,340,NULL,20);

INSERTAR A LA VISTA UN EMPLEADO CON CODIGO 2 Y EL DEPARTAMENTO 20

INSERT INTO DE1 VALUES  (2,'TERINO','EMPLEADO',2,SYSDATE,340,NULL,20);

BORRAR LA VISTA

DROP DEP

HACER LOS MISMO PERO CON LA VISTA CHECK OPTIONS

DROP DEP20


INSERTAR ARTICULO A CADA FABRICANTE CON EL NOMBRE DEL ARTICULO IGUAL QUE EL DEL FABRICANTE , CON PESO Y CATEGORIA NULA, PRECIOS VACIOS Y MEDIA DE EXISTENCIAS DE TODOS LOS ARTICULOS REDONDEADA

INSERT INTO Articulos (Nombre, Fabricante, Peso, Categoria, Precio, Existencias)
SELECT Fabricante AS Nombre,NULL, NULL AS Peso, NULL AS Categoria, NULL AS Precio, ROUND(AVG(Existencias)) AS Existencias_Media
FROM Articulos
GROUP BY Fabricante;


INSERTAR UN PEDIDO DE 50 UNIDADES POR CADA ARTICULOS DE LOS FABRICANTES CON MAS VENTAS EN LAS TIENDAS DE MADRID

INSERT INTO ARTICULOS  AS (
    SELECT a.ARTICULO
    FROM VENTAS v
    INNER JOIN ARTICULOS a ON v.COD_FABRICANTE = a.COD_FABRICANTE
    WHERE v.COD_FABRICANTE IN (
        SELECT COD_FABRICANTE
        FROM FABRICANTES
        WHERE PAIS = 'ESPAÃ‘A'
    )
    GROUP BY a.FABRICANTE
    ORDER BY COUNT(*) DESC
)
SELECT DISTINCT ARTICULO 
FROM ARTICULOSWHERE COD_FABRICANTE IN (SELECT COD_FABRICANTE
FROM VENTAS
GROUP BY COD_FABRICANTE HAVING COUNT(*)=(SELECT COD_FABRICANTE
FROM VENTAS
GROUP BY COD_FABRICANTE
HA))
















































